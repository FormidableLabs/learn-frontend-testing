extends layout

block meta

  title SeattleJS - Learn Frontend Testing
  meta(name='description', content='Learn how to test frontend JavaScript code in your web applications.')
  meta(name='author', content='Ryan Roemer')

block slides

  section#title
    h1 Learn Frontend Testing
    h3
      a(href="http://www.meetup.com/seattlejs/") Seattle JS
      |  -&nbsp;
      a(href="http://www.meetup.com/seattlejs/events/139993642/") Oct. 16th, 2013
    p
      a(href='http://loose-bits.com') Ryan Roemer
      |  |&nbsp;
      a(href='http://twitter.com/ryan_roemer') @ryan_roemer
    p
      a(href='http://twitter.com/FormidableLabs') @FormidableLabs

  section
    section
      h2 Sponsors

    section
      div
        a.image(href="http://formidablelabs.com")
          img(class="logo-white",
              alt="Formidable Labs",
              src="img/sponsors/formidable.png",
              width="80%")

    section
      div
        a.image(href="http://redfin.com")
          img(class="logo-white",
              alt="Redfin",
              src="img/sponsors/redfin.png",
              width="75%")

  section
    :markdown
      ## Mentors

      Try to keep pace with the presentation, but side conversations are
      encouraged and don't let us stop any good directions.

      And, **thanks**!

  section
    section
      :markdown
        ## Motivation

        Web applications are increasingly becoming **frontend heavy**.

        We need to **verify** app logic and behavior, and that
        means braving the browser.

    section
      :markdown
        ## So let's test

        **Backend** is straightforward and easy

        ... but what about the frontend?

    section
      :markdown
        ## Frontend testing

        **Frontend** testing is difficult and error-prone.

        * Asynchronous events, timing
        * Browser idiosyncracies
        * State of testing technologies

    section
      h2 But getting better
      div
        a.image(href="http://backbone-testing.com")
          img.book(alt="Backbone.js Testing",
                   src="img/sponsors/backbone-testing.jpg")

    section
      p ... so let's get started with a modern frontend test stack.

    section
      h2 Get the code

      a(href='https://github.com/FormidableLabs/learn-frontend-testing')
        | github.com/FormidableLabs/learn-frontend-testing

      //- git clone https://github.com/FormidableLabs/learn-frontend-testing.git
      pre
        code.text.no-highlight .
          $ git clone https://github.com/FormidableLabs/
                      learn-frontend-testing.git

  section
    section
      :markdown
        ## Overview

        * Some code to work with
        * Installation and test page
        * Suites
        * Assertions
        * Fakes

    section
      :markdown
        ## We will learn how to

        * Hook frontend JS to tests
        * Write assertions against behavior
        * Fake application behavior
        * Run and verify the tests

    section
      :markdown
        ## Things we're **not** going to cover

        * TDD / BDD
        * Application development
        * Functional testing
        * Performance testing

  section
    section
      h2 Coding time

      p We're going to say hello:
      p "<strong>SeattleJS</strong>" &#10142; "<strong>Hello SeattleJS!</strong>"
      hr(width="50%")
      p And <a href="http://en.wikipedia.org/wiki/CamelCase">camel case</a> strings:
      p "<strong>fun-test-time</strong>" &#10142; "<strong>funTestTime</strong>"

    section
      :markdown
        ## Set up your project

      pre
        code.text.no-highlight .
          # Copy the skeleton application.
          $ cp -r skeleton MY_APP_NAME
      //-

    section
      :markdown
        ## Project Structure

        Using with the "skeleton" application.

      pre
        code.text.no-highlight .
          MY_APP_NAME/
            js/
              app/
                hello.js
                camel-case.js
              lib/
                chai.js
                mocha.js
                mocha.css
                sinon.js
            index.html
      //-

    section
      h2 Hello!
      a(href="skeleton/js/app/hello.js") skeleton/js/app/hello.js
      pre
        code.javascript
          include ../skeleton/js/app/hello.js

    section
      h2 Camel Case
      a(href="skeleton/js/app/camel-case.js") skeleton/js/app/camel-case.js
      pre
        code.javascript
          include ../skeleton/js/app/camel-case.js

    section
      h2 Demo
      a(href="skeleton/index.html") skeleton/index.html

  section
    section
      h2 Our test harness

    section
      :markdown
        ## Test Libraries

        * **[Mocha](http://visionmedia.github.com/mocha/)** (`v1.13.0`): Framework
        * **[Chai](http://chaijs.com/)** (`v1.7.3`): Assertions
        * **[Sinon.JS](http://sinonjs.org/)** (`v1.8.0`): Fakes - spies and stubs

    section
      :markdown
        ## Directory layout

        A combined structure.

      pre
        code.text.no-highlight .
          MY_APP_NAME/
            js/
              app/
              lib/
              spec/
                hello.spec.js
                *.spec.js
            test.html
            index.html
      //-

    section
      :markdown
        ## The test page

        Create a test "driver" web page.

        [example/test.html](example/test.html)

      pre
        code.text.no-highlight .
          $ cd MY_APP_NAME
          $ touch test.html
      //-

    section
      :markdown
        ## test.html

      pre.html .
        <html>
          <head>
            <title>Frontend Testing</title>
            <!-- Application libraries. -->
            <script src="js/app/hello.js"></script>
            <script src="js/app/camel-case.js"></script>
            <!-- Test styles and libraries. -->
            <link rel="stylesheet"
                  href="js/lib/mocha.css" />
            <script src="js/lib/mocha.js"></script>
            <script src="js/lib/chai.js"></script>
            <script src="js/lib/sinon.js"></script>
      //-

    section
      :markdown
        ## test.html

      pre.html.no-indent .
        &nbsp;   <!-- Test Setup -->
            <script>
              // Set up Chai and Mocha.
              window.expect = chai.expect;
              mocha.setup("bdd");

              // Run tests on window load.
              window.onload = function () {
                mocha.run();
              };
            </script>
      //-

    section
      :markdown
        ## test.html

      pre.html.no-indent .
        &nbsp;   <!-- Tests. -->
            <!-- ... spec script includes go here ... -->
        &nbsp; &lt;/head>
          <body>
            <div id="mocha"></div>
          </body>
        </html>
      //-

      :markdown
        [example/test-empty.html](example/test-empty.html)

  section
    section
      h2 Mocha Suites, Specs

    section
      :markdown
        ## TODO

  section
    section
      h2 Chai Assertions

    section
      :markdown
        ## TODO

  section
    section
      h2 Sinon.JS Fakes

    section
      :markdown
        ## TODO

  section
    :markdown
      ## What we've covered

      * Test harness
      * Suites, specs
      * Assertions
      * Fakes

  section
    :markdown
      ## Additional Topics

      * Automation
      * TDD / BDD
      * Functional testing
      * Performance testing

  section
    h1 Thanks!
    p.last
      a(href='http://loose-bits.com') Ryan Roemer
      |  |&nbsp;
      a(href='http://twitter.com/ryan_roemer') @ryan_roemer
    br
    p.last
      a(href='http://formidablelabs.github.com/learn-frontend-testing')
        | bit.ly/frontend-testing
    hr(width="50%")
    p.last
      a(href='http://backbone-testing.com') backbone-testing.com

  section
    :markdown
      ## TODO - ADD-ONs

      * jQuery/DOM testing.



